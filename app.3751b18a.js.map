{"version":3,"sources":["webpack:///./src/map.js","webpack:///./src/data.js","webpack:///./src/table.js","webpack:///./src/index.js"],"names":["INITIAL_COORDS","isMobile","window","innerHeight","innerWidth","roleColors","init","data","geoJSON","featureCollection","i","length","feature","replace","lon","lat","match","parseDMS","isNaN","parseFloat","built","buildFeature","push","e","console","log","buildGeoJSON","features","map","L","center","zoom","scrollWheelZoom","maxZoom","attribution","id","addTo","pointToLayer","latlng","radius","fillColor","properties","color","weight","opacity","fillOpacity","onEachFeature","layer","prop","bindPopup","maxWidth","bindTooltip","loadMap","setTimeout","document","getElementById","style","display","featureObject","variable","hasOwnProperty","trim","geometry","coordinates","input","parts","split","degrees","minutes","seconds","direction","dd","parseInt","convertDMSToDD","getSpreadsheetData","Papa","download","header","complete","results","publishedData","filter","obj","toLowerCase","Map","elementId","row","$","DataTable","responsive","paging","columns","title","className","render","type","full","meta","Table","querySelector","innerHTML","addEventListener","Data","colors","colorsHTML","join","mapLegendShow","mapLegendHide","mapLegendContent","querySelectorAll","onclick","classList","add","remove","forEach","div"],"mappings":"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","file":"app.3751b18a.js","sourcesContent":["import * as L from 'leaflet'\n\nconst MAPBOX_LINK = 'https://api.mapbox.com/styles/v1/bernardosp/ck3r9ne5k21bj1dpdgl67vzyu/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiYmVybmFyZG9zcCIsImEiOiJjamkyMmhqdjAwZ284M2txcHpqYjUwam91In0.RiploEl5Mm6bjXhPZbN6XQ'\nconst LAT_COL = 'LAT'\nconst LON_COL = 'LON'\nconst INITIAL_COORDS = [37.76496739271615, -122.39985495803376]\nconst INITIAL_ZOOM = 8\nconst isMobile = window.innerHeight >= window.innerWidth\n\nconst roleColors = {\n  'Consulting': '#ff7f0e',\n  'Deconstruction': '#2ca02c',\n  'Government / Public Agency': '#aec7e8',\n  'Reuse': '#9467bd',\n  'Waste Management & Recycling': '#bcbd22',\n}\n\nexport {\n  init,\n  roleColors,\n  mapLegend,\n}\n\nfunction init(data) {\n  const geoJSON = buildGeoJSON(data)\n  console.log(data)\n  console.log(geoJSON)\n  console.log(data.length, 'rows received')\n  console.log(geoJSON.features.length, 'rows parsed')\n  loadMap(geoJSON)\n  setTimeout(function(){\n    document.getElementById('spinner').style.display = 'none'\n  }, 350)\n}\n\nfunction buildFeature(feature) {\n  let featureObject = {\n    \"type\": \"Feature\",\n    \"properties\": {},\n    \"geometry\": {\n      \"type\": \"Point\",\n      \"coordinates\": []\n    }\n  }\n  for (let variable in feature) {\n    if (feature.hasOwnProperty(variable)) {\n      featureObject.properties[variable.trim()] = feature[variable].trim()\n    }\n  }\n  featureObject.geometry.coordinates.push(parseFloat(feature[LON_COL]))\n  featureObject.geometry.coordinates.push(parseFloat(feature[LAT_COL]))\n  return featureObject\n}\n\nfunction buildGeoJSON(data) {\n  let featureCollection = {\n    \"type\": \"FeatureCollection\",\n    \"features\": []\n  }\n  for (var i = 0; i < data.length; i++) {\n    let feature = data[i]\n    feature[LON_COL] = feature[LON_COL].replace(',', '.')\n    feature[LAT_COL] = feature[LAT_COL].replace(',', '.')\n    let lon = feature[LON_COL]\n    let lat = feature[LAT_COL]\n    if (lon.match(/[a-z]/i) && lat.match(/[a-z]/i)) {\n      feature[LON_COL] = parseDMS(feature[LON_COL])\n      feature[LAT_COL] = parseDMS(feature[LAT_COL])\n    }\n    try {\n      if (isNaN(parseFloat(lon)) == false && isNaN(parseFloat(lat)) == false) {\n        let built = buildFeature(feature)\n        featureCollection['features'].push(built)\n      }\n    } catch (e) {\n        console.log('error parsing row', i, feature, e)\n    }\n  }\n  return featureCollection\n}\n\nfunction loadMap(geoJSON) {\n  const map = L.map('map', {\n    center: INITIAL_COORDS,\n    zoom: INITIAL_ZOOM,\n    scrollWheelZoom: false\n  })\n\n  L.tileLayer(MAPBOX_LINK, {\n    maxZoom: 18,\n    attribution: 'Map data &copy <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' +\n      '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\n      'Imagery Â© <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n    id: 'mapbox.light'\n  }).addTo(map)\n\n  function popup(feature, layer) {\n    let prop = feature.properties\n\n    layer.bindPopup(`\n      <div class=\"popup\">\n        <h2>${prop['ENTITY']}</h2>\n        ${prop['LOCATION'] ? `<h4>${prop['LOCATION']}</h4>` : ''}\n        <hr/>\n        <table class=\"popup-table\">\n          <tbody>\n            <tr><td><strong>Role(s)</strong></td><td>${prop['ROLE(S)']}</td></tr>\n            <tr><td><strong>Address</strong></td><td>${prop['FULL ADDRESS']}</td></tr>\n            <tr><td><strong>Contact</strong></td><td>${prop['CONTACT']}</td></tr>\n            <tr><td><strong>Email</strong></td><td><a href=\"mailto:${prop['EMAIL']}\">${prop['EMAIL']}</a></td></tr>\n            <tr><td><strong>Phone</strong></td><td><a href=\"tel:${prop['PHONE']}\">${prop['PHONE']}</a></td></tr>\n            <tr><td><strong>Website</strong></td><td><a href=\"${prop['WEBSITE']}\" target=\"_blank\">${prop['WEBSITE']}</a></td></tr>\n          </tbody>\n        </table>\n        <p class=\"popup-p\"><strong>Collaboration Opportunities: </strong>${prop['COLLABORATION OPPORTUNITIES']}</p>\n      </div>\n      `, {\n        maxWidth : isMobile ? window.innerWidth * 0.75 : 450\n      })\n\n    layer.bindTooltip(`\n      <div class=\"tooltip\">\n        <strong style=\"font-size: 1.25em;\">${prop['ENTITY']}</strong>\n        ${prop['LOCATION'] ? `<br /><span>${prop['LOCATION']}</span>` : ''}\n      </div>\n      `, {\n        maxWidth : isMobile ? window.innerWidth * 0.75 : 450\n      })\n  }\n\n  const pointsLayers = L.geoJSON(geoJSON, {\n    pointToLayer: function(feature, latlng) {\n      return L.circleMarker(latlng, {\n        radius: 9,\n        fillColor: roleColors[feature.properties['GENERAL ROLE']],\n        color: \"#fff\",\n        weight: 1.5,\n        opacity: 1,\n        fillOpacity: 0.9,\n      })\n    },\n    onEachFeature: popup\n  }).addTo(map)\n\n}\n\n// https://stackoverflow.com/questions/1140189/converting-latitude-and-longitude-to-decimal-values\nfunction parseDMS(input) {\n    let parts = input.split(/[^\\d\\w\\.]+/)\n    return convertDMSToDD(parts[0], parts[1], parts[2], parts[3])\n}\n\nfunction convertDMSToDD(degrees, minutes, seconds, direction) {\n    let dd = parseInt(degrees) + parseInt(minutes)/60 + parseInt(seconds)/(60*60)\n\n    if (direction == \"S\" || direction == \"W\") {\n        dd = dd * -1\n    }\n    return dd\n}\n\nfunction mapLegend(colors) {\n  const colorsHTML = [`\n    <div id=\"map-legend-show\" class=\"map-legend-row map-legend-icon flex ${isMobile ? 'visible' : 'invisible'}\">\n      <span>See Legend</span>\n    </div>\n    <div id=\"map-legend-hide\" class=\"map-legend-row map-legend-icon flex ${isMobile ? 'invisible' : 'visible'}\">\n      <span>Hide Legend</span>\n    </div>\n  `]\n  for (let variable in colors) {\n    if (colors.hasOwnProperty(variable)) {\n      colorsHTML.push(`\n        <div class=\"map-legend-row map-legend-content flex ${isMobile ? 'invisible' : 'visible'}\">\n          <div class=\"map-legend-color\" style=\"background: ${colors[variable]}\"></div>\n          <span>${variable}</span>\n        </div>\n      `)\n    }\n  }\n  return `<div class=\"map-legend flex flex-column\">${colorsHTML.join('\\n')}</div>`\n}\n","import * as Papa from 'papaparse'\nimport * as Map from './map.js'\nimport * as Table from './table.js'\n\nconst publicSpreadsheetUrl = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vSZ_aRgmKOVqj1Ch4zy8zzjkQREuYo0xXzPlJUKv4-7ULfWNNQdJbOFJgVFayS4zbT7vvkIaJ5JZaBa/pub?output=csv'\n\nexport {\n  getSpreadsheetData\n}\n\nfunction getSpreadsheetData() {\n  Papa.parse(publicSpreadsheetUrl, {\n  download: true,\n  header: true,\n  complete: function(results) {\n      const data = results.data\n      const publishedData = data.filter(function(obj){\n        if ('STATUS' in obj) {\n          return obj['STATUS'].trim().toLowerCase() == 'published'\n        }\n      })\n      Map.init(publishedData)\n      Table.init(publishedData, '#table')\n    }\n  })\n}\n","// var $ = require( 'jquery' )\n// var dt = require( 'datatables.net' )( window, $ )\nimport * as $ from 'jquery'\nimport * as dt from 'datatables.net'\nimport * as dtResponsive from 'datatables.net-responsive'\n\nexport {\n  init\n}\n\nfunction init(data, elementId) {\n  for (var i = 0; i < data.length; i++) {\n    let row = data[i]\n    row['ENTITY'] = row['ENTITY'] + ' - ' + row['LOCATION']\n  }\n  $(elementId).DataTable({\n    data: data,\n    responsive: true,\n    // scrollY: '510px',\n    // scrollCollapse: true,\n    paging: true,\n    columns: [\n      {\n        data: 'ENTITY',\n        title: 'ENTITY:',\n        className: 'details-col',\n        render: function(data, type, full, meta) {\n          return `<span class=\"details-link\">${data}</span>`\n        }\n      },\n      // {\n      //   data: 'LOCATION',\n      //   title: 'LOCATION:',\n      // },\n      {\n        data: 'ROLE(S)',\n        title: 'ROLE(S):',\n      },\n      {\n        data: 'FULL ADDRESS',\n        title: 'ADDRESS:',\n        className: 'none',\n      },\n      {\n        data: 'CONTACT',\n        title: 'CONTACT:',\n        className: 'none',\n      },\n      {\n        data: 'EMAIL',\n        title: 'EMAIL:',\n        className: 'none',\n        render: function(data, type, full, meta) {\n          return `<a href=\"mailto:${data}\">${data}</a>`\n        }\n      },\n      {\n        data: 'PHONE',\n        title: 'PHONE:',\n        className: 'none',\n        render: function(data, type, full, meta) {\n          return `<a href=\"tel:${data}\">${data}</a>`\n        }\n      },\n      {\n        data: 'WEBSITE',\n        title: 'WEBSITE:',\n        className: 'none',\n        render: function(data, type, full, meta) {\n          return `<a href=\"${data}\" target=\"_blank\">${data}</a>`\n        }\n      },\n      {\n        data: 'COLLABORATION OPPORTUNITIES',\n        title: 'COLLABORATION OPPORTUNITIES:',\n        className: 'none',\n      },\n    ]\n  })\n}\n","import * as Data from './data.js'\nimport * as Map from './map.js'\nimport style from './style/main.scss'\n\nconst app = document.querySelector('#app')\n\napp.innerHTML = `\n<div id=\"spinner\">\n  <div class=\"spinner-grow text-secondary\" role=\"status\">\n    <span class=\"sr-only\">Loading...</span>\n  </div>\n</div>\n<div id=\"map\"></div>\n<div id=\"mapLegend\"></div>\n<div class=\"table-wrapper\">\n  <table id=\"table\" class=\"stripe display responsive\" width=\"100%\"></table>\n</div>\n`\n\nwindow.addEventListener('DOMContentLoaded', init)\n\nfunction init() {\n  Data.getSpreadsheetData()\n\n  const mapLegend = document.querySelector('#mapLegend')\n  mapLegend.innerHTML = Map.mapLegend(Map.roleColors)\n\n  const mapLegendShow = document.querySelector('#map-legend-show')\n  const mapLegendHide = document.querySelector('#map-legend-hide')\n  const mapLegendContent = document.querySelectorAll('.map-legend-content')\n\n  mapLegendShow.onclick = function () {\n    mapLegendShow.classList.add('invisible')\n    mapLegendShow.classList.remove('visible')\n    mapLegendHide.classList.add('visible')\n    mapLegendHide.classList.remove('invisible')\n    mapLegendContent.forEach(div => {\n        div.classList.add('visible')\n        div.classList.remove('invisible')\n    })\n  }\n  mapLegendHide.onclick = function () {\n    mapLegendShow.classList.remove('invisible')\n    mapLegendShow.classList.add('visible')\n    mapLegendHide.classList.remove('visible')\n    mapLegendHide.classList.add('invisible')\n    mapLegendContent.forEach(div => {\n        div.classList.remove('visible')\n        div.classList.add('invisible')\n    })\n  }\n}\n"],"sourceRoot":""}